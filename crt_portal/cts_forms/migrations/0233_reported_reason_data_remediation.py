# Generated by Django 4.2.20 on 2025-04-25 01:05

from django.db import migrations


def forwards_func(_, schema_editor):
    with schema_editor.connection.cursor() as cursor:
        try:
            num_reported_reasons_corrected = 0
            query = ""
            protected_class_map = {
                "Age": 1,
                "Disability": 2,
                "Family": 3,
                "Gender": 4,
                "Genetic": 5,
                "Immigration/citizenship": 6,
                "Language": 7,
                "National": 8,
                "Pregnancy": 9,
                "Race/color": 10,
                "Religion": 11,
                "Sex": 12,
                "Sexual": 13,
                "None": 14,
                "Other": 16
            }

            # description is a string containing the list of reported reasons that got removed delimited by commas
            # target_object_id is the report id
            cursor.execute(
                """
                    SELECT description, target_object_id 
                    FROM actstream_action
                    WHERE 
                        verb like '%Protected%' and 
                        description like '%to ""%' and 
                        timestamp > '2025-03-04 00:00:00.00+00:00'
                """
            )

            for row in cursor.fetchall():
                # Cleaning up the descriptions so we can map them to the protected class
                affected_reported_reasons = [x.replace('Updated from "', "").strip() for x in
                                             row[0].replace("Family, marital, or parental status", "Family").split(',')]
                report_id = row[1]

                for affected_reported_reason in affected_reported_reasons:
                    # Get the first word of the affected reported reason so we can map it to the protected class id
                    first_word = affected_reported_reason.split()[0].strip('"')
                    # Try to add the reported reason to the report, if it already exists then we do nothing
                    query += f"INSERT INTO cts_forms_report_protected_class (report_id, protectedclass_id) VALUES ({report_id}, {protected_class_map[first_word]}) ON CONFLICT (report_id, protectedclass_id) DO NOTHING;\n"
                    # Sanity check to keep track of how many reported reasons we are correcting
                    num_reported_reasons_corrected += 1

            cursor.execute(f"BEGIN;\n{query}\nCOMMIT;")
            print(f"Number of tags corrected: {num_reported_reasons_corrected}")
        except Exception as e:
            print(e)


def reverse_func(_, __):
    """
    This is not a reversible migration.
    """
    pass


class Migration(migrations.Migration):
    dependencies = [
        ('cts_forms', '0232_routingsection_access_section_pocs'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
